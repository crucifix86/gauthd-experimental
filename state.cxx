#include "callid.hxx"

#ifdef WIN32
#include <winsock2.h>
#include "gnproto.h"
#include "gncompress.h"
#else
#include "protocol.h"
#include "binder.h"
#endif

namespace GNET
{

static GNET::Protocol::Type _state_GAuthServer[] = 
{
	PROTOCOL_KEYEXCHANGE,
	PROTOCOL_STATUSANNOUNCE,
	PROTOCOL_ACCOUNTINGREQUEST,
	PROTOCOL_ANNOUNCEZONEID,
	PROTOCOL_ANNOUNCEZONEID2,
	PROTOCOL_ANNOUNCEZONEID3,
	PROTOCOL_QUERYUSERPRIVILEGE,
	PROTOCOL_QUERYUSERFORBID,
	PROTOCOL_GMKICKOUTUSER,
	PROTOCOL_GMFORBIDSELLPOINT,
	PROTOCOL_GMSHUTUP,
	PROTOCOL_TRANSBUYPOINT,
	PROTOCOL_GETPLAYERIDBYNAME_RE,
	PROTOCOL_SYSSENDMAIL_RE,
	PROTOCOL_SYSSENDMAIL3_RE,
	PROTOCOL_VERIFYMASTER,
	PROTOCOL_VERIFYMASTER_RE,
	RPC_GQUERYPASSWD,
	RPC_USERLOGIN,
	RPC_USERLOGIN2,
	RPC_USERLOGOUT,
	RPC_CASHSERIAL,
	RPC_GETADDCASHSN,
	PROTOCOL_ADDCASH,
	PROTOCOL_ADDCASH_RE,
	RPC_MATRIXPASSWD,
	RPC_MATRIXPASSWD2,
	RPC_MATRIXTOKEN,
	PROTOCOL_MATRIXFAILURE,
	PROTOCOL_BILLINGREQUEST,
	PROTOCOL_BILLINGBALANCE,
	PROTOCOL_BILLINGBALANCESA,
	PROTOCOL_BILLINGCONFIRM,
	PROTOCOL_BILLINGCANCEL,
	PROTOCOL_ACFORBIDCHEATER,
	RPC_GETUSERCOUPON,
	RPC_COUPONEXCHANGE,
	PROTOCOL_GAME2AU,
	PROTOCOL_SSOGETTICKETREQ,
	RPC_EC_DBARENATEAMTOPLISTDETAIL,
	RPC_EC_DBARENATEAMTOPLIST,
	RPC_EC_DBARENAPLAYERTOPLIST,
	RPC_EC_SQLCREATEARENAPLAYER,
	RPC_EC_SQLDELETEARENAPLAYER,
	RPC_EC_SQLGETARENAPLAYER,
	RPC_EC_SQLSETARENAPLAYER,
	RPC_EC_SQLCREATEARENATEAM,
	RPC_EC_SQLDELETEARENATEAM,
	RPC_EC_SQLGETARENATEAM,
	RPC_EC_SQLSETARENATEAM,
};

GNET::Protocol::Manager::Session::State state_GAuthServer(_state_GAuthServer,
						sizeof(_state_GAuthServer)/sizeof(GNET::Protocol::Type), 86400);

static GNET::Protocol::Type _state_GPanelLogin[] = 
{
	PROTOCOL_PANELRESPONSE,
};

GNET::Protocol::Manager::Session::State state_GPanelLogin(_state_GPanelLogin,
						sizeof(_state_GPanelLogin)/sizeof(GNET::Protocol::Type), 3600);

static GNET::Protocol::Type _state_GPanelServer[] = 
{
	PROTOCOL_MYSQLSTORAGE,
	RPC_GMYSQLSTORAGE,
};

GNET::Protocol::Manager::Session::State state_GPanelServer(_state_GPanelServer,
						sizeof(_state_GPanelServer)/sizeof(GNET::Protocol::Type), 3600);


};

